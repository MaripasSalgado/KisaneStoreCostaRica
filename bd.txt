
-- Table: product_categories
CREATE TABLE product_categories (
  p_cat_id NUMBER(10) PRIMARY KEY,
  p_cat_title VARCHAR2(255) NOT NULL,
  p_cat_top VARCHAR2(100) NOT NULL,
  p_cat_image VARCHAR2(100) NOT NULL,
  CONSTRAINT fk_product_categories_p_cat_id FOREIGN KEY (p_cat_id) REFERENCES products(p_cat_id)
);


-- Table: categories
CREATE TABLE categories (
  cat_id NUMBER(10) PRIMARY KEY,
  cat_title VARCHAR2(100) NOT NULL,
  cat_top VARCHAR2(100) NOT NULL,
  cat_image VARCHAR2(100) NOT NULL
);


-- Table: manufacturers
CREATE TABLE manufacturers (
  manufacturer_id NUMBER(10) PRIMARY KEY,
  manufacturer_title VARCHAR2(255) NOT NULL,
  manufacturer_top VARCHAR2(100) NOT NULL,
  manufacturer_image VARCHAR2(100) NOT NULL
);



-- Table: admins
CREATE TABLE admins (
  admin_id NUMBER(10) PRIMARY KEY,
  admin_name VARCHAR2(255) NOT NULL,
  admin_email VARCHAR2(255) NOT NULL,
  admin_pass VARCHAR2(255) NOT NULL,
  admin_image VARCHAR2(255) NOT NULL,
  admin_contact VARCHAR2(255) NOT NULL,
  admin_country VARCHAR2(255) NOT NULL,
  admin_job VARCHAR2(255) NOT NULL,
  admin_about VARCHAR2(4000) NOT NULL
);


-- Table: customers
CREATE TABLE customers (
  customer_id NUMBER(10) PRIMARY KEY,
  customer_name VARCHAR2(255) NOT NULL,
  customer_email VARCHAR2(255) NOT NULL,
  customer_pass VARCHAR2(255) NOT NULL,
  customer_country VARCHAR2(255) NOT NULL,
  customer_city VARCHAR2(255) NOT NULL,
  customer_contact VARCHAR2(255) NOT NULL,
  customer_address VARCHAR2(4000) NOT NULL,
  customer_image VARCHAR2(255) NOT NULL,
  customer_ip VARCHAR2(255) NOT NULL,
  customer_confirm_code VARCHAR2(255) NOT NULL
);


-- Table: customer_orders
CREATE TABLE customer_orders (
  order_id NUMBER(10) PRIMARY KEY,
  customer_id NUMBER(10) NOT NULL,
  due_amount NUMBER(10, 2) NOT NULL,
  invoice_no NUMBER(10) NOT NULL,
  qty NUMBER(10) NOT NULL,
  size VARCHAR2(100) NOT NULL,
  order_status VARCHAR2(100) NOT NULL,
  CONSTRAINT fk_customer_id FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);



-- Table: wishlist
CREATE TABLE wishlist (
  wishlist_id NUMBER(10) PRIMARY KEY,
  customer_id NUMBER(10) NOT NULL,
  product_id NUMBER(10) NOT NULL,
  CONSTRAINT fk_wishlist_customer_id FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
  CONSTRAINT fk_wishlist_product_id FOREIGN KEY (product_id) REFERENCES products(product_id)
);


-- Table: cart
CREATE TABLE cart (
  cart_id NUMBER(10) PRIMARY KEY,
  customer_id NUMBER(10) NOT NULL,
  p_id NUMBER(10) NOT NULL,
  ip_add VARCHAR2(255) NOT NULL,
  qty NUMBER(10) NOT NULL,
  p_price NUMBER(10, 2) NOT NULL,
  size VARCHAR2(255) NOT NULL,
  CONSTRAINT fk_cart_customer_id FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
  CONSTRAINT fk_cart_product_id FOREIGN KEY (p_id) REFERENCES products(product_id)
);


-- Table: pending_orders
CREATE TABLE pending_orders (
  order_id NUMBER(10) PRIMARY KEY,
  customer_id NUMBER(10) NOT NULL,
  invoice_no NUMBER(10) NOT NULL,
  product_id NUMBER(10) NOT NULL,
  qty NUMBER(10) NOT NULL,
  size VARCHAR2(255) NOT NULL,
  order_status VARCHAR2(255) NOT NULL,
  CONSTRAINT fk_pending_orders_customer_id FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
  CONSTRAINT fk_pending_orders_product_id FOREIGN KEY (product_id) REFERENCES products(product_id)
);


-- Table: coupons
CREATE TABLE coupons (
  coupon_id NUMBER(10) PRIMARY KEY,
  product_id NUMBER(10) NOT NULL,
  coupon_title VARCHAR2(255) NOT NULL,
  coupon_price NUMBER(10, 2) NOT NULL,
  coupon_code VARCHAR2(255) NOT NULL,
  coupon_limit NUMBER(10) NOT NULL,
  coupon_used NUMBER(10) NOT NULL,
  CONSTRAINT fk_coupons_product_id FOREIGN KEY (product_id) REFERENCES products(product_id)
);


-- Table: bundle_product_relation
CREATE TABLE bundle_product_relation (
  rel_id NUMBER(10) PRIMARY KEY,
  rel_title VARCHAR2(255) NOT NULL,
  product_id NUMBER(10) NOT NULL,
  bundle_id NUMBER(10) NOT NULL,
  CONSTRAINT fk_bundle_product_relation_product_id FOREIGN KEY (product_id) REFERENCES products(product_id),
  CONSTRAINT fk_bundle_product_relation_bundle_id FOREIGN KEY (bundle_id) REFERENCES bundle_product_relation(bundle_id)
);


-- Table: coupon_product_relation
CREATE TABLE coupon_product_relation (
  coupon_id NUMBER(10) NOT NULL,
  product_id NUMBER(10) NOT NULL,
  PRIMARY KEY (coupon_id, product_id),
  CONSTRAINT fk_coupon_product_relation_coupon_id FOREIGN KEY (coupon_id) REFERENCES coupons(coupon_id),
  CONSTRAINT fk_coupon_product_relation_product_id FOREIGN KEY (product_id) REFERENCES products(product_id)
);


-- Table: bundle_product_relation_mapping
CREATE TABLE bundle_product_relation_mapping (
  product_id NUMBER(10) NOT NULL,
  bundle_id NUMBER(10) NOT NULL,
  PRIMARY KEY (product_id, bundle_id),
  CONSTRAINT fk_bundle_product_relation_mapping_product_id FOREIGN KEY (product_id) REFERENCES products(product_id),
  CONSTRAINT fk_bundle_product_relation_mapping_bundle_id FOREIGN KEY (bundle_id) REFERENCES bundle_product_relation(bundle_id)
);


-- Table: about_us
CREATE TABLE about_us (
  about_id NUMBER(10) PRIMARY KEY,
  about_heading VARCHAR2(255) NOT NULL,
  about_short_desc VARCHAR2(4000) NOT NULL,
  about_desc CLOB NOT NULL
);

-- Table: contact_us
CREATE TABLE contact_us (
  contact_id NUMBER(10) PRIMARY KEY,
  contact_email VARCHAR2(255) NOT NULL,
  contact_heading VARCHAR2(255) NOT NULL,
  contact_desc CLOB NOT NULL
);


-- Table: store
CREATE TABLE store (
  store_id NUMBER(10) PRIMARY KEY,
  store_title VARCHAR2(255) NOT NULL,
  store_image VARCHAR2(255) NOT NULL,
  store_desc CLOB NOT NULL,
  store_button VARCHAR2(255) NOT NULL,
  store_url VARCHAR2(255) NOT NULL
);


-- Table: terms
CREATE TABLE terms (
  term_id NUMBER(10) PRIMARY KEY,
  term_title VARCHAR2(100) NOT NULL,
  term_link VARCHAR2(100) NOT NULL,
  term_desc CLOB NOT NULL
);


-- Table: payments
CREATE TABLE payments (
  payment_id NUMBER(10) PRIMARY KEY,
  invoice_no NUMBER(10) NOT NULL,
  amount NUMBER(10, 2) NOT NULL,
  payment_mode VARCHAR2(255) NOT NULL,
  ref_no NUMBER(10) NOT NULL,
  code NUMBER(10) NOT NULL,
  payment_date DATE NOT NULL
);


-- Foreign key from product_categories to products
ALTER TABLE product_categories
ADD FOREIGN KEY (p_cat_id) REFERENCES products(p_cat_id);

-- Foreign key from categories to products
ALTER TABLE categories
ADD FOREIGN KEY (cat_id) REFERENCES products(cat_id);

-- Foreign key from admins to customer_orders
ALTER TABLE admins
ADD FOREIGN KEY (admin_id) REFERENCES customer_orders(admin_id);

-- Foreign key from customers to customer_orders
ALTER TABLE customers
ADD FOREIGN KEY (customer_id) REFERENCES customer_orders(customer_id);

-- Foreign key from customers to wishlist
ALTER TABLE customers
ADD FOREIGN KEY (customer_id) REFERENCES wishlist(customer_id);

-- Foreign key from customers to cart
ALTER TABLE customers
ADD FOREIGN KEY (customer_id) REFERENCES cart(customer_id);

-- Foreign key from coupons to products
ALTER TABLE coupons
ADD FOREIGN KEY (product_id) REFERENCES products(product_id);

-- Foreign key from coupons to bundle_product_relation
ALTER TABLE coupons
ADD FOREIGN KEY (bundle_id) REFERENCES bundle_product_relation(bundle_id);

-- Foreign key from bundle_product_relation_mapping to products
ALTER TABLE bundle_product_relation_mapping
ADD FOREIGN KEY (product_id) REFERENCES products(product_id);

-- Foreign key from bundle_product_relation_mapping to bundle_product_relation
ALTER TABLE bundle_product_relation_mapping
ADD FOREIGN KEY (bundle_id) REFERENCES bundle_product_relation(bundle_id);

-- Foreign key from pending_orders to products
ALTER TABLE pending_orders
ADD FOREIGN KEY (product_id) REFERENCES products(product_id);